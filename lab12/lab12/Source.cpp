#include <iostream>
#include <string>
#include <Windows.h>
using namespace std;

void program1() {
	int numOfMonth, numOfDay;
	string out;

	string month[]{ "",
		"января",	//1
		"февраля",	//2
		"марта" ,	//3
		"апреля" ,	//4
		"мая" ,		//5
		"июня" ,	//6
		"июля" ,	//7
		"августа" ,	//8
		"сентября",	//9
		"октября",	//10
		"ноября",	//11
		"декабря" };//12

	string day[]{ "",
		"первое", "второе",  "третье",  "четвёртое",  "пятое",  "шестое",  "седьмое",  "восьмое",  "девятое",  "десятое", //1-10 
		"одиннадцатое",  "двенадцатое",  "тринадцатое",  "четырнадцатое",  "пятнадцатое",  "шестнадцатое",  "семнадцатое",  "восемнадцатое",  "девятнадцатое",  "двадцатое" };  //11-20

	cout << "1. Программа выведет дату по указанным номерам дня и месяца.\n" <<
		"Введите номер месяца: ";
	cin >> numOfMonth;
	cout << "Ведите номер дня: ";
	cin >> numOfDay;
	
	if (!(numOfDay > 0 && numOfDay < 32) || !(numOfMonth > 0 && numOfMonth < 13)) {
		cout << "Были введены некорректные данные.\n\n";
		return;
	}
	
	if (numOfDay < 21) {
		out = day[numOfDay] + " " + month[numOfMonth];
	} 
	else if (numOfDay >= 21 && numOfDay < 30) {
		out = "двадцать " + day[numOfDay % 10] + " " + month[numOfMonth];
	}
	else if (numOfDay == 30) {
		out = "тридцатое " + month[numOfMonth];
	}
	else if (numOfDay == 31) {
		out = "тридцать первое " + month[numOfMonth];
	}

	cout << "Вывод: " << out << ".\n\n";
}

void program2() {
	char initDirect, buf;
	int move, dDirect;
	char direct[] {'С', 'В', 'Ю', 'З'};
	string out;
	cout << "2. Программа определит, в какую сторону света будет смотреть робот после выполнения следующих команд, имеющих свои номера:\n" <<
		"0 - продолжить движение,\n" <<
		"1 - поворот налево,\n" <<
		"-1 - поворот направо,\n";
	cout << "Введите первую букву соответствующей стороны света (север, юг, запад, восток), в которую робот смотрит изначально: ";
	cin >> initDirect;
	cout << "Введите номер команды для движения: ";
	cin >> move;
	
	if (move == 1) { //поворот налево
		buf = direct[3];
		direct[3] = direct[2];
		direct[2] = direct[1];
		direct[1] = direct[0];
		direct[0] = buf;
	}
	if (move == -1) { //поворот направо
		buf = direct[0];
		direct[0] = direct[1];
		direct[1] = direct[2];
		direct[2] = direct[3];
		direct[3] = buf;
	}

	switch (initDirect) { //определение направления после поворота
	case 'с' :
	case 'С' :
		dDirect = 0;
		break;

	case 'в' :
	case 'В' :
		dDirect = 1;
		break;

	case 'ю' :
	case 'Ю' :
		dDirect = 2;
		break;

	case 'з':
	case 'З':
		dDirect = 3;
		break;
	default:
		cout << "Были введены некорректные данные.\n\n";
		return;
	}

	switch (direct[dDirect]) { //подготовлю string для вывода в консоль
	case 'С':
		out = "север";
		break;

	case 'В':
		out = "восток";
		break;

	case 'Ю':
		out = "юг";
		break;

	case 'З':
		out = "запад";
		break;
	}

	cout << "После совершения команды робот будет смотреть на " << out << ".\n\n";
}

void program3() {
	int dAmount;
	string unit[]{ "", "одно", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять" }; //1-9
	string teen[]{"","одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать"}; //11-19
	string ten[]{ "", "десять", "двадцать", "тридцать", "сорок"}; //десятки
	string out;
	cout << "3. Программа получает на вход число в диапазоне от 10 до 40 (включительно), после чего выводит соответствующее количество \"учебных заданий\".\n" <<
		"Введите число от 10 до 40: ";
	cin >> dAmount;
	
	if (dAmount < 10 || dAmount > 40) {
		cout << "Введено некорректное значение.\n\n";
		return;
	}

	if (dAmount % 10 == 1 && dAmount > 20) { //подготавливаю "задание" для "1" в разряде единиц у 20 и 30
		out = "учебное задание";
	}
	else if (dAmount % 10 >= 2 && dAmount % 10 <= 4 && dAmount > 20) { //подготавливаю "задание" для "2","3" и "4" в разряде единиц у 20 и 30
		out = "учебных задания";
	}
	else { //подготаваливаю "задание" для десятков без единиц, для 11-19, для оставшихся разрядов единиц у 20 и 30
		out = "учебных заданий";
	}

	if (dAmount > 10 && dAmount < 20) {
		cout << "Вывод: " << teen[dAmount % 10] + " " + out << ".\n\n";
	}
	else if (dAmount % 10 != 0) {
		cout << "Вывод: " << ten[dAmount / 10] + " " + unit[dAmount % 10] + " " + out << ".\n\n";
	}
	else {
		cout << "Вывод: " << ten[dAmount / 10] + " " + out << ".\n\n";
	}
}

void program4() {
	int dAmount;
	string unit[]{ "", " один", " два", " три", " четыре", " пять", " шесть", " семь", " восемь", " девять" }; //1-9
	string teen[]{ ""," одиннадцать", " двенадцать", " тринадцать", " четырнадцать", " пятнадцать", " шестнадцать", " семнадцать", " восемнадцать", " девятнадцать" }; //11-19
	string ten[]{ "", " десять", " двадцать", " тридцать", " сорок", " пятьдесят", " шестьдесят", " семьдесят", " восемьдесят", " девяносто"}; //десятки
	string hundred[]{ "", "сто", "двести",  "триста",  "четыреста",  "пятьсот",  "шестьсот",  "семьсот",  "восемьсот",  "девятьсот" }; //сотни
	string out;
	cout << "4. Программа получает на вход число в диапазоне от 100 до 999 (включительно), после чего выводит это число в словесном виде.\n" <<
		"Введите число: ";
	cin >> dAmount;

	if (dAmount < 100 || dAmount > 999) {
		cout << "Введено некорректное значение.\n\n";
		return;
	}

	if (dAmount%100 > 10 && dAmount%100 < 20) {
		out = hundred[dAmount / 100] + teen[dAmount % 10];
	}
	else {
		out = hundred[dAmount / 100] + ten[dAmount % 100 / 10] + unit[dAmount % 10];
	}

	cout << "Вывод: " << out << ".\n\n";
}

void program5() {
	int numAnimal, numColor;
	double year, bufAnimal, bufColor, buf, begin;
	string color[]{ "", "зелён", "красн", "жёлт", "бел", "чёрн" };
	string animal[]{ "", " крысы", " коровы", " тигра", " зайца", " дракона", " змеи", " лошади", " овцы", " обезьяны", " курицы", " собаки", " свиньи", };
	string end;
	begin = 1984;
	cout << "5. Программа по заданному номеру года (не ранее 1984) определит его название в восточном календаре.\n" <<
		"Введите номер года: ";
	cin >> year;

	bufColor = (year-begin) / 60; //определяю, сколько 60-летних циклов прошло и какой идёт сейчас
	buf = int((year - begin) / 60); //определяю, сколько 60-летних циклов прошло
	bufColor = (bufColor - buf) * 60 / 12; //выделяю дробную часть количества 60-летних циклов (беру идущий цикл), определяю, сколько лет прошло в 60-летнем цикле и какой по счёту 12-летний цикл идёт
	numColor = bufColor + 1.000001; //отсекаю дробную часть присвоением целочисленной переменной вещественного числа и прибавляю 1.000001 для обозначения текущего 12-летнего цикла и устранения погрешности из-за использования вещественных чисел

	buf = int(bufColor);
	bufAnimal = (bufColor - buf) * 12; //выделяю дробную часть количества 12-летних циклов (беру идущий цикл), определяю, сколько лет прошло в текущем 12-летнем цикле
	numAnimal = bufAnimal + 1.000001; //отсекаю дробную часть присвоением целочисленной переменной вещественного числа и прибавляю 1.000001 для обозначения текущего года в 12-летнем цикле и устранения погрешности из-за использования вещественных чисел
	

	switch (numAnimal) {
	case 3:
	case 4:
	case 5:
		end = "ого";
		break;

	default:
		end = "ой";
		break;
	}

	cout << year << " год - год " << color[numColor] + end + animal[numAnimal] << ".\n\n";
	
}

int main() {
	SetConsoleCP(1251);
	SetConsoleOutputCP(1251);

	program1();
	program2();
	program3();
	program4();
	program5();
	
	return 0;
}